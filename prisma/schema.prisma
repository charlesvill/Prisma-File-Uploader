// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  name     String?
  hash     String
  files    File[]
  folders  Folder[]
}

model File {
  id             Int      @id @default(autoincrement())
  file_name      String
  file_extension String
  file_size      Int?
  file_url       String?
  public_id      String?
  date_created   DateTime @default(now())
  owner          User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId        Int
  folder         Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId       Int
}

model Folder {
  id            Int      @id @default(autoincrement())
  folder_name   String
  last_modified DateTime @default(now())
  owner         User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId       Int
  files         File[]
  share         Share?
}

model Share {
  id           Int      @id @default(autoincrement())
  folder       Folder   @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId     Int      @unique
  share_URL    String
  date_created DateTime @default(now())
  lifespan     Int
}

// share lifespan represented in number of days
